{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from '../img/back-of-card.png';\nimport { shuffle } from '../services/shuffle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  useEffect(() => {\n    shuffle().then(data => {\n      setDeck(data);\n\n      if (deck.remaining > 0) {\n        drawCard();\n      }\n    });\n  }, []); // let cards\n  // if (deck.cards) {\n  //   cards = deck.cards.map((card) => {\n  //     return(\n  //       <Card\n  //         key = {card.id}\n  //         id = {card.id}\n  //         value = {card.value}\n  //         suit = {card.suit}\n  //         image = {card.image}\n  //       />\n  //     )\n  //   })\n  // }\n\n  const userCardPlayed = document.getElementById(\"user-card-played\");\n  const compCardPlayed = document.getElementById(\"comp-card-played\");\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`).then(response => {\n        return response.json();\n      }).then(card => {\n        if (card.cards) {\n          userCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`;\n          compCardPlayed.innerHTML = `<img src=${card.cards[1].image}></img>`;\n        }\n\n        deck.remaining -= 2;\n        alert(\"Whatchya clickin that for stupid!\");\n      });\n    } else {\n      userCardPlayed.innerHTML = \"Out of cards\";\n      compCardPlayed.innerHTML = \"Out of cards\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2 card-stack\",\n        id: \"comp-card-stack\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2 card-stack\",\n        id: \"comp-discard-stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-played\",\n          id: \"comp-card-played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-played\",\n          id: \"user-card-played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2 card-stack\",\n        id: \"user-discard-stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-2 card-stack\",\n        id: \"user-card-stack\",\n        onClick: drawCard,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell small-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"NGuX+IhPEoaYDnAUn9U4qFBy9U0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js"],"names":["React","useState","useEffect","logo","shuffle","Game","props","deck","setDeck","then","data","remaining","drawCard","userCardPlayed","document","getElementById","compCardPlayed","event","fetch","deck_id","response","json","card","cards","innerHTML","image","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport logo from '../img/back-of-card.png'\nimport { shuffle } from '../services/shuffle'\n\nconst Game = (props) => {\n  const [deck, setDeck] = useState([])\n\n  useEffect( () => {\n    shuffle()\n    .then(data => {\n      setDeck(data)\n      if (deck.remaining > 0) {\n        drawCard()\n      }\n    })\n  }, [])\n\n  // let cards\n\n  // if (deck.cards) {\n  //   cards = deck.cards.map((card) => {\n  //     return(\n  //       <Card\n  //         key = {card.id}\n  //         id = {card.id}\n  //         value = {card.value}\n  //         suit = {card.suit}\n  //         image = {card.image}\n  //       />\n  //     )\n  //   })\n  // }\n\n  const userCardPlayed = document.getElementById(\"user-card-played\")\n  const compCardPlayed = document.getElementById(\"comp-card-played\")\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`)\n      .then(response => {\n        return response.json()\n      })\n      .then(card => {\n        if(card.cards){\n          userCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`\n          compCardPlayed.innerHTML = `<img src=${card.cards[1].image}></img>`\n        }\n        deck.remaining -= 2\n        alert(\"Whatchya clickin that for stupid!\")\n      })\n    }else{\n      userCardPlayed.innerHTML = \"Out of cards\"\n      compCardPlayed.innerHTML = \"Out of cards\"\n    }\n  }\n\n  return(\n    <div>\n      <div className=\"grid-x grid-margin-y\">\n        <div className=\"cell small-5\"></div>\n        <div className=\"cell small-2 card-stack\" id=\"comp-card-stack\">\n          <img src={logo}></img>\n        </div>\n        <div className=\"cell small-2 card-stack\" id=\"comp-discard-stack\"></div>\n        <div className=\"cell small-3\"></div>\n      </div>\n\n      <div className=\"grid-x grid-margin-y\">\n        <div className=\"cell small-4\"></div>\n        <div className=\"cell small-2\">\n          <div className=\"card-played\" id=\"comp-card-played\"></div>\n        </div>\n        <div className=\"cell small-2\">\n          <div className=\"card-played\" id=\"user-card-played\"></div>\n        </div>\n        <div className=\"cell small-4\"></div>\n      </div>\n\n      <div className=\"grid-x grid-margin-y\">\n        <div className=\"cell small-3\"></div>\n        <div className=\"cell small-2 card-stack\" id=\"user-discard-stack\"></div>\n        <div className=\"cell small-2 card-stack\" id=\"user-card-stack\" onClick={drawCard}>\n          <img src={logo}></img>\n        </div>\n        <div className=\"cell small-5\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}