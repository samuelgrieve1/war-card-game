{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Controls from './Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  useEffect(() => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\").then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        let errorMessage = `${response.status}(${response.statusText})`,\n            error = new Error(errorMessage);\n        throw error;\n      }\n    }).then(response => {\n      return response.json();\n    }).then(body => {\n      setDeck(body);\n    }).catch(error => console.error(`Error in fetch: ${error.message}`));\n  }, []);\n  let cards;\n\n  if (deck.cards) {\n    cards = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        id: deck.cards[0].id,\n        value: deck.cards[0].value,\n        suit: deck.cards[0].suit,\n        image: deck.cards[0].image\n      }, deck.cards[0].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: deck.cards[1].id,\n        value: deck.cards[1].value,\n        suit: deck.cards[1].suit,\n        image: deck.cards[1].image\n      }, deck.cards[1].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  const drawCard = event => {\n    fetch(\"https://deckofcardsapi.com/api/deck/<<deck.deck_id>>/draw/?count=2\").then(response => response.json()).then(response => console.log(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), cards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"NGuX+IhPEoaYDnAUn9U4qFBy9U0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war/src/components/Game.js"],"names":["React","useState","useEffect","Card","Controls","Game","props","deck","setDeck","fetch","then","response","ok","errorMessage","status","statusText","error","Error","json","body","catch","console","message","cards","id","value","suit","image","drawCard","event","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfO,IAAAA,KAAK,CAAC,uDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACb,eAAOD,QAAP;AACD,OAFD,MAEM;AACJ,YAAIE,YAAY,GAAI,GAAEF,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,GAA7D;AAAA,YACAC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAV,CADR;AAEA,cAAMG,KAAN;AACD;AACF,KATD,EAUCN,IAVD,CAUMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,KAZD,EAaCR,IAbD,CAaMS,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACD,KAfD,EAgBCC,KAhBD,CAgBOJ,KAAK,IAAIK,OAAO,CAACL,KAAR,CAAe,mBAAkBA,KAAK,CAACM,OAAQ,EAA/C,CAhBhB;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,MAAIC,KAAJ;;AACA,MAAGhB,IAAI,CAACgB,KAAR,EAAc;AACdA,IAAAA,KAAK,gBACD;AAAA,8BACE,QAAC,IAAD;AAEE,QAAA,EAAE,EAAIhB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EAFtB;AAGE,QAAA,KAAK,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcE,KAHzB;AAIE,QAAA,IAAI,EAAIlB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcG,IAJxB;AAKE,QAAA,KAAK,EAAInB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcI;AALzB,SACSpB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EADvB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AAEE,QAAA,EAAE,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EAFtB;AAGE,QAAA,KAAK,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcE,KAHzB;AAIE,QAAA,IAAI,EAAIlB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcG,IAJxB;AAKE,QAAA,KAAK,EAAInB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcI;AALzB,SACSpB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EADvB;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBE;;AAEF,QAAMI,QAAQ,GAAGC,KAAK,IAAI;AACxBpB,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EADlB,EAECR,IAFD,CAEMC,QAAQ,IAAIU,OAAO,CAACS,GAAR,CAAYnB,QAAZ,CAFlB;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGY,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzDD;;GAAMlB,I;;KAAAA,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Card from './Card'\nimport Controls from './Controls'\n\nconst Game = (props) => {\n  const [deck, setDeck] = useState([])\n\n  useEffect( () => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\")\n    .then(response => {\n      if(response.ok){\n        return response\n      } else{\n        let errorMessage = `${response.status}(${response.statusText})`,\n        error = new Error(errorMessage)\n        throw(error)\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(body => {\n      setDeck(body)\n    })\n    .catch(error => console.error(`Error in fetch: ${error.message}`))\n  }, [])\n\n  let cards\n  if(deck.cards){\n  cards = (\n      <div>\n        <Card\n          key = {deck.cards[0].id}\n          id = {deck.cards[0].id}\n          value = {deck.cards[0].value}\n          suit = {deck.cards[0].suit}\n          image = {deck.cards[0].image}\n        />\n        <Card\n          key = {deck.cards[1].id}\n          id = {deck.cards[1].id}\n          value = {deck.cards[1].value}\n          suit = {deck.cards[1].suit}\n          image = {deck.cards[1].image}\n        />\n        <Controls />\n      </div>\n  )}\n\n  const drawCard = event => {\n    fetch(\"https://deckofcardsapi.com/api/deck/<<deck.deck_id>>/draw/?count=2\")\n    .then(response => response.json())\n    .then(response => console.log(response))\n  }\n\n  return(\n    <div>\n      <h1>Hello</h1>\n      {cards}\n    </div>\n  )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}