{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport backOfCard from '../img/back-of-card.png';\nimport backOfCardUpsideDown from '../img/back-of-card-upside-down.png';\nimport { getValue } from '../helpers/helpers';\nimport ship from '../img/ship.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet compCardPlayedValue;\nlet userCardPlayedValue;\nlet cardCodes1 = \"\";\nlet cardCodes2 = \"\";\nconst compDiscardStack = document.getElementById(\"comp-discard-stack\");\nconst userDiscardStack = document.getElementById(\"user-discard-stack\");\nconst compCardPlayed = document.getElementById(\"comp-card-played\");\nconst userCardPlayed = document.getElementById(\"user-card-played\");\n\nconst Game = props => {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const [cardsPlayed, setCardsPlayed] = useState(); // Create/shuffle deck\n\n  useEffect(() => {\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(response => response.json()).then(deck => {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=52`).then(response => response.json()).then(drawn => {\n        let counter = 0;\n        drawn.cards.forEach(card => {\n          if (counter % 2 === 0) {\n            cardCodes1 += `${card.code},`;\n            counter += 1;\n          } else {\n            cardCodes2 += `${card.code},`;\n            counter += 1;\n          }\n        });\n        return drawn;\n      }).then(deck => {\n        fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?cards=${cardCodes1} + ${cardCodes2}`).then(response => response.json()).then(pile => {\n          console.log(pile);\n        });\n      });\n    }); // fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?count=26`)\n    // .then(response => response.json())\n    // .then(pile => {\n    //   console.log(pile)\n    //   debugger\n    // })\n    // setDeck(data)\n\n    if (document.getElementsByClassName(\"userName\")) {\n      let userNameInput = prompt(\"What's your name?\");\n      let userNames = document.getElementsByClassName(\"userName\");\n\n      for (let i of userNames) {\n        i.innerHTML = userNameInput;\n      }\n    }\n  }, []); // Draw 52 cards\n\n  if (deck.remaining > 0) {// if(data.cards){\n    // compCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n    // compCardPlayedValue = getValue(data.cards[0].value)\n    // }\n    // deck.remaining -= 1\n  }\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`).then(response => response.json()).then(data => {\n        // User plays card\n        if (data.cards) {\n          userCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`;\n          userCardPlayedValue = getValue(data.cards[0].value);\n        }\n\n        deck.remaining -= 1; // Decide who wins hand\n\n        if (userCardPlayedValue > compCardPlayedValue) {\n          // User wins\n          // Add comp/user cards to users pile\n          userDiscardStack.innerHTML = `<img src=${data.cards[0].image}></img>`; // \n        } else if (userCardPlayedValue < compCardPlayedValue) {\n          // Computer wins\n          console.log(\"You lose!\");\n        } else {\n          // War!\n          console.log(\"War!\");\n        } // Comp plays new card\n        // setTimeout(function(){\n        //   compCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`\n        //   compCardPlayedValue = getValue(card.cards[0].value)\n        // }\n        // , 2000)\n\n      });\n    } else {\n      userCardPlayed.innerHTML = \"Out of cards\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-x\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"ship\",\n              src: ship\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"War: Star Trek Edition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4 card-stack rotate-right\",\n            id: \"comp-card-stack\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: backOfCardUpsideDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4 card-stack rotate-left\",\n            id: \"comp-discard-stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-8 table-bg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-x\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Computer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 54\n              }, this), \"vs\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"userName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Score:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 116\n              }, this), \" \\xA0\\xA0\\xA0\\xA0 Computer: 0 \\xA0\\xA0\\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"userName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 192\n              }, this), \": 0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 113\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-played\",\n              id: \"comp-card-played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-played\",\n              id: \"user-card-played\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Draw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-2 card-stack rotate-left\",\n            id: \"user-discard-stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-2 card-stack rotate-right\",\n            id: \"user-card-stack\",\n            onClick: drawCard,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: backOfCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell medium-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell medium-12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"wYbPRMwjoCMQUkxAHFg37bElLtM=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js"],"names":["React","useState","useEffect","backOfCard","backOfCardUpsideDown","getValue","ship","compCardPlayedValue","userCardPlayedValue","cardCodes1","cardCodes2","compDiscardStack","document","getElementById","userDiscardStack","compCardPlayed","userCardPlayed","Game","props","deck","setDeck","cardsPlayed","setCardsPlayed","fetch","then","response","json","deck_id","drawn","counter","cards","forEach","card","code","pile","console","log","getElementsByClassName","userNameInput","prompt","userNames","i","innerHTML","remaining","drawCard","event","data","image","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport backOfCard from '../img/back-of-card.png'\nimport backOfCardUpsideDown from '../img/back-of-card-upside-down.png'\nimport { getValue } from '../helpers/helpers'\nimport ship from '../img/ship.png'\n\nlet compCardPlayedValue\nlet userCardPlayedValue\n\nlet cardCodes1 = \"\"\nlet cardCodes2 = \"\"\n\nconst compDiscardStack = document.getElementById(\"comp-discard-stack\")\nconst userDiscardStack = document.getElementById(\"user-discard-stack\")\n\nconst compCardPlayed = document.getElementById(\"comp-card-played\")\nconst userCardPlayed = document.getElementById(\"user-card-played\")\n\nconst Game = (props) => {\n  const [deck, setDeck] = useState({})\n  const [cardsPlayed, setCardsPlayed] = useState()\n\n  // Create/shuffle deck\n  useEffect( () => {\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')\n    .then(response => response.json())\n    .then(deck => {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=52`)\n      .then(response => response.json())\n      .then(drawn => {\n        let counter = 0\n        drawn.cards.forEach(card => {\n          if(counter % 2 === 0){\n            cardCodes1 += `${card.code},`\n            counter += 1\n          } else{\n            cardCodes2 += `${card.code},`\n            counter += 1\n          }\n        })\n        return drawn\n      })\n      .then(deck => {\n        fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?cards=${cardCodes1} + ${cardCodes2}`)\n        .then(response => response.json())\n        .then(pile => {\n          console.log(pile)\n        })\n      })\n    })\n    // fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?count=26`)\n    // .then(response => response.json())\n    // .then(pile => {\n    //   console.log(pile)\n    //   debugger\n    // })\n    // setDeck(data)\n    if(document.getElementsByClassName(\"userName\")){\n      let userNameInput = prompt(\"What's your name?\")\n      let userNames = document.getElementsByClassName(\"userName\")\n      for(let i of userNames){\n        i.innerHTML = userNameInput\n      }\n    }\n  }, [])\n\n  // Draw 52 cards\n  if (deck.remaining > 0) {\n      // if(data.cards){\n        // compCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n        // compCardPlayedValue = getValue(data.cards[0].value)\n      // }\n      // deck.remaining -= 1\n  }\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`)\n      .then(response => response.json())\n      .then(data => {\n\n        // User plays card\n        if(data.cards){\n          userCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n          userCardPlayedValue = getValue(data.cards[0].value)\n        }\n        deck.remaining -= 1\n\n        // Decide who wins hand\n        if(userCardPlayedValue > compCardPlayedValue){\n          // User wins\n          // Add comp/user cards to users pile\n          userDiscardStack.innerHTML = `<img src=${data.cards[0].image}></img>`\n          // \n        } else if(userCardPlayedValue < compCardPlayedValue){\n            // Computer wins\n            console.log(\"You lose!\")\n        } else{\n            // War!\n            console.log(\"War!\")\n        }\n\n        // Comp plays new card\n        // setTimeout(function(){\n        //   compCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`\n        //   compCardPlayedValue = getValue(card.cards[0].value)\n        // }\n        // , 2000)\n      })\n    }else{\n      userCardPlayed.innerHTML = \"Out of cards\"\n    }\n  }\n\n  return(\n    <div>\n      <div className=\"grid-x\">\n\n        <div className=\"cell medium-4\">\n        <div className=\"grid-x\">\n          <div className=\"cell medium-4\"><img id=\"ship\" src={ship}></img><h3>War: Star Trek Edition</h3></div>\n          <div className=\"cell medium-4 card-stack rotate-right\" id=\"comp-card-stack\">\n            <img src={backOfCardUpsideDown}></img>\n          </div>\n          <div className=\"cell medium-4 card-stack rotate-left\" id=\"comp-discard-stack\"></div>\n        </div>\n        </div>\n\n        <div className=\"cell medium-8 table-bg\">\n        <div className=\"grid-x\">\n          <div className=\"cell medium-4\"><h1>Computer<br></br>vs<br></br><span className=\"userName\"></span></h1><p><b>Score:</b> &nbsp;&nbsp;&nbsp;&nbsp; Computer: 0 &nbsp;&nbsp;&nbsp;&nbsp; <span className=\"userName\"></span>: 0</p></div>\n          <div className=\"cell medium-2\">\n            <div className=\"card-played\" id=\"comp-card-played\"></div>\n          </div>\n          <div className=\"cell medium-2\">\n            <div className=\"card-played\" id=\"user-card-played\"></div>\n          </div>\n          <div className=\"cell medium-4\"></div>\n          <div className=\"cell medium-12\">\n            <button className=\"button\">Draw</button>\n          </div>\n          <div className=\"cell medium-4\"></div>\n          <div className=\"cell medium-2 card-stack rotate-left\" id=\"user-discard-stack\"></div>\n          <div className=\"cell medium-2 card-stack rotate-right\" id=\"user-card-stack\" onClick={drawCard}>\n            <img src={backOfCard}></img>\n          </div>\n          <div className=\"cell medium-4\"></div>\n        </div>\n        <div className=\"cell medium-12\"></div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}