{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Controls from './Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  useEffect(() => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\").then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        let errorMessage = `${response.status}(${response.statusText})`,\n            error = new Error(errorMessage);\n        throw error;\n      }\n    }).then(response => {\n      return response.json();\n    }).then(body => {\n      setDeck(body);\n    }).catch(error => console.error(`Error in fetch: ${error.message}`));\n  }, []);\n  let cards;\n\n  if (deck.cards) {\n    for (let i = 0; i < deck.cards.length; i++) {\n      console.log(i);\n    } // <div>\n    //   <Card\n    //     key = {deck.cards[i].id}\n    //     id = {deck.cards[i].id}\n    //     value = {deck.cards[i].value}\n    //     suit = {deck.cards[i].suit}\n    //     image = {deck.cards[i].image}\n    //   />\n    // </div>\n\n  }\n\n  const drawCard = event => {\n    fetch(\"https://deckofcardsapi.com/api/deck/<<deck.deck_id>>/draw/?count=2\").then(response => response.json()).then(response => console.log(response));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), cards, /*#__PURE__*/_jsxDEV(Controls, {\n      drawCard: drawCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"NGuX+IhPEoaYDnAUn9U4qFBy9U0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js"],"names":["React","useState","useEffect","Card","Controls","Game","props","deck","setDeck","fetch","then","response","ok","errorMessage","status","statusText","error","Error","json","body","catch","console","message","cards","i","length","log","drawCard","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfO,IAAAA,KAAK,CAAC,uDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACb,eAAOD,QAAP;AACD,OAFD,MAEM;AACJ,YAAIE,YAAY,GAAI,GAAEF,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,GAA7D;AAAA,YACAC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAV,CADR;AAEA,cAAMG,KAAN;AACD;AACF,KATD,EAUCN,IAVD,CAUMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,KAZD,EAaCR,IAbD,CAaMS,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACD,KAfD,EAgBCC,KAhBD,CAgBOJ,KAAK,IAAIK,OAAO,CAACL,KAAR,CAAe,mBAAkBA,KAAK,CAACM,OAAQ,EAA/C,CAhBhB;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,MAAIC,KAAJ;;AACA,MAAGhB,IAAI,CAACgB,KAAR,EAAc;AAEZ,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjB,IAAI,CAACgB,KAAL,CAAWE,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACxCH,MAAAA,OAAO,CAACK,GAAR,CAAYF,CAAZ;AACD,KAJW,CAMV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AAED,QAAMG,QAAQ,GAAGC,KAAK,IAAI;AACxBnB,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EADlB,EAECR,IAFD,CAEMC,QAAQ,IAAIU,OAAO,CAACK,GAAR,CAAYf,QAAZ,CAFlB;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGY,KAFH,eAGE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtDD;;GAAMtB,I;;KAAAA,I;AAwDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Card from './Card'\nimport Controls from './Controls'\n\nconst Game = (props) => {\n  const [deck, setDeck] = useState([])\n\n  useEffect( () => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\")\n    .then(response => {\n      if(response.ok){\n        return response\n      } else{\n        let errorMessage = `${response.status}(${response.statusText})`,\n        error = new Error(errorMessage)\n        throw(error)\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(body => {\n      setDeck(body)\n    })\n    .catch(error => console.error(`Error in fetch: ${error.message}`))\n  }, [])\n\n  let cards\n  if(deck.cards){\n\n    for(let i = 0; i < deck.cards.length; i++){\n      console.log(i)\n    }\n    \n      // <div>\n      //   <Card\n      //     key = {deck.cards[i].id}\n      //     id = {deck.cards[i].id}\n      //     value = {deck.cards[i].value}\n      //     suit = {deck.cards[i].suit}\n      //     image = {deck.cards[i].image}\n      //   />\n      // </div>\n  }\n\n  const drawCard = event => {\n    fetch(\"https://deckofcardsapi.com/api/deck/<<deck.deck_id>>/draw/?count=2\")\n    .then(response => response.json())\n    .then(response => console.log(response))\n  }\n\n  return(\n    <div>\n      <h1>Hello</h1>\n      {cards}\n      <Controls drawCard={drawCard} />\n    </div>\n  )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}