{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war/src/components/CardDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDeck = props => {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\").then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        let errorMessage = `${response.status}(${response.statusText})`,\n            error = new Error(errorMessage);\n        throw error;\n      }\n    }).then(response => {\n      return response.json();\n    }).then(body => {\n      setDeck(body);\n    }).catch(error => console.error(`Error in fetch: ${error.message}`));\n  }, []); // let putCards\n  // let getCards = Object.keys(deck).forEach(key =>{\n  //   if(key === \"cards\"){\n  //     for(let i = 0; i < deck.cards.length; i++){\n  //       // console.log(deck.cards[i].value)\n  //       putCards +=\n  //         <Card\n  //           key = {deck.cards[i].id}\n  //           id = {deck.cards[i].id}\n  //           value = {deck.cards[i].value}\n  //           suit = {deck.cards[i].suit}\n  //         />\n  //     }\n  //   }\n  // })\n  // let putCards\n\n  let cards = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      id: deck.cards[0].id,\n      value: deck.cards[0].value,\n      suit: deck.cards[0].suit\n    }, deck.cards[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      id: deck.cards[1].id,\n      value: deck.cards[1].value,\n      suit: deck.cards[1].suit\n    }, deck.cards[1].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), cards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardDeck, \"lRN72Jn4Cfrh8w5aqHHHGLhGRHY=\");\n\n_c = CardDeck;\nexport default CardDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDeck\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war/src/components/CardDeck.js"],"names":["React","useState","useEffect","Card","CardDeck","props","deck","setDeck","fetch","then","response","ok","errorMessage","status","statusText","error","Error","json","body","catch","console","message","cards","id","value","suit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,KAAK,CAAC,uDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACb,eAAOD,QAAP;AACD,OAFD,MAEM;AACJ,YAAIE,YAAY,GAAI,GAAEF,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,UAAW,GAA7D;AAAA,YACAC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAV,CADR;AAEA,cAAMG,KAAN;AACD;AACF,KATD,EAUCN,IAVD,CAUMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,KAZD,EAaCR,IAbD,CAaMS,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACD,KAfD,EAgBCC,KAhBD,CAgBOJ,KAAK,IAAIK,OAAO,CAACL,KAAR,CAAe,mBAAkBA,KAAK,CAACM,OAAQ,EAA/C,CAhBhB;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT,CAH0B,CAuB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACE;;AACF,MAAIC,KAAK,gBACT;AAAA,4BACI,QAAC,IAAD;AAEA,MAAA,EAAE,EAAIhB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EAFpB;AAGA,MAAA,KAAK,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcE,KAHvB;AAIA,MAAA,IAAI,EAAIlB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcG;AAJtB,OACOnB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EADrB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOE,QAAC,IAAD;AAEE,MAAA,EAAE,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EAFtB;AAGE,MAAA,KAAK,EAAIjB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcE,KAHzB;AAIE,MAAA,IAAI,EAAIlB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcG;AAJxB,OACSnB,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAcC,EADvB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;;AAkBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhED;;GAAMlB,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Card from './Card'\n\nconst CardDeck = (props) => {\n  const [deck, setDeck] = useState({})\n\n  useEffect( () => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/draw/?count=2\")\n    .then(response => {\n      if(response.ok){\n        return response\n      } else{\n        let errorMessage = `${response.status}(${response.statusText})`,\n        error = new Error(errorMessage)\n        throw(error)\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(body => {\n      setDeck(body)\n    })\n    .catch(error => console.error(`Error in fetch: ${error.message}`))\n  }, [])\n\n  // let putCards\n  // let getCards = Object.keys(deck).forEach(key =>{\n  //   if(key === \"cards\"){\n  //     for(let i = 0; i < deck.cards.length; i++){\n  //       // console.log(deck.cards[i].value)\n  //       putCards +=\n  //         <Card\n  //           key = {deck.cards[i].id}\n  //           id = {deck.cards[i].id}\n  //           value = {deck.cards[i].value}\n  //           suit = {deck.cards[i].suit}\n  //         />\n        \n  //     }\n  //   }\n  // })\n    // let putCards\n  let cards = \n  <div>\n      <Card\n      key = {deck.cards[0].id}\n      id = {deck.cards[0].id}\n      value = {deck.cards[0].value}\n      suit = {deck.cards[0].suit}\n    />\n    <Card\n      key = {deck.cards[1].id}\n      id = {deck.cards[1].id}\n      value = {deck.cards[1].value}\n      suit = {deck.cards[1].suit}\n    />\n    </div>\n\n  \n\n  return(\n    <div>\n      <h1>Hello</h1>\n      {cards}\n    </div>\n  )\n}\n\nexport default CardDeck"]},"metadata":{},"sourceType":"module"}