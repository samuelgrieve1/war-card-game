{"ast":null,"code":"var _jsxFileName = \"/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport backOfCard from '../img/back-of-card.png';\nimport backOfCardUpsideDown from '../img/back-of-card-upside-down.png';\nimport { getValue } from '../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const [cardsPlayed, setCardsPlayed] = useState();\n  let compCardPlayedValue;\n  let userCardPlayedValue;\n  let cardCodes1 = \"\";\n  let cardCodes2 = \"\";\n  const compCardPlayed = document.getElementById(\"comp-card-played\");\n  const userCardPlayed = document.getElementById(\"user-card-played\");\n  const compDiscardStack = document.getElementById(\"comp-discard-stack\");\n  const userDiscardStack = document.getElementById(\"user-discard-stack\"); // Create/shuffle deck\n\n  useEffect(() => {\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(response => response.json()).then(deck => {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=52`).then(response => response.json()).then(drawn => {\n        let counter = 0;\n        drawn.cards.forEach(card => {\n          if (counter % 2 === 0) {\n            cardCodes1 += `${card.code},`;\n            counter += 1;\n          } else {\n            cardCodes2 += `${card.code},`;\n            counter += 1;\n          }\n        });\n        return drawn;\n      }).then(deck => {\n        fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?cards=${cardCodes1} + ${cardCodes2}`).then(response => response.json()).then(pile => {\n          console.log(pile);\n        });\n      });\n    }); // fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?count=26`)\n    // .then(response => response.json())\n    // .then(pile => {\n    //   console.log(pile)\n    //   debugger\n    // })\n    // setDeck(data)\n\n    userName = prompt(\"What's your name?\");\n  }, []); // Draw 52 cards\n\n  if (deck.remaining > 0) {// if(data.cards){\n    // compCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n    // compCardPlayedValue = getValue(data.cards[0].value)\n    // }\n    // deck.remaining -= 1\n  }\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`).then(response => response.json()).then(data => {\n        // User plays card\n        if (data.cards) {\n          userCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`;\n          userCardPlayedValue = getValue(data.cards[0].value);\n        }\n\n        deck.remaining -= 1; // Decide who wins hand\n\n        if (userCardPlayedValue > compCardPlayedValue) {\n          // User wins\n          // Add comp/user cards to users pile\n          userDiscardStack.innerHTML = `<img src=${data.cards[0].image}></img>`; // \n        } else if (userCardPlayedValue < compCardPlayedValue) {\n          // Computer wins\n          console.log(\"You lose!\");\n        } else {\n          // War!\n          console.log(\"War!\");\n        } // Comp plays new card\n        // setTimeout(function(){\n        //   compCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`\n        //   compCardPlayedValue = getValue(card.cards[0].value)\n        // }\n        // , 2000)\n\n      });\n    } else {\n      userCardPlayed.innerHTML = \"Out of cards\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 card-stack rotate-right\",\n        id: \"comp-card-stack\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backOfCardUpsideDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 card-stack rotate-left\",\n        id: \"comp-discard-stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y grid-padding-y cards-played\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Computer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 52\n          }, this), \"vs\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 63\n          }, this), userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 table-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-played\",\n          id: \"comp-card-played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 table-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-played\",\n          id: \"user-card-played\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 43\n          }, this), \" \\xA0\\xA0\\xA0\\xA0 Computer: 0 \\xA0\\xA0\\xA0\\xA0 Player 1: 0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-x grid-margin-y\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 card-stack rotate-left\",\n        id: \"user-discard-stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-2 card-stack rotate-right\",\n        id: \"user-card-stack\",\n        onClick: drawCard,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backOfCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell medium-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell medium-12\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"wYbPRMwjoCMQUkxAHFg37bElLtM=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samuelgrieve/Desktop/coding/war-card-game/src/components/Game.js"],"names":["React","useState","useEffect","backOfCard","backOfCardUpsideDown","getValue","Game","props","deck","setDeck","cardsPlayed","setCardsPlayed","compCardPlayedValue","userCardPlayedValue","cardCodes1","cardCodes2","compCardPlayed","document","getElementById","userCardPlayed","compDiscardStack","userDiscardStack","fetch","then","response","json","deck_id","drawn","counter","cards","forEach","card","code","pile","console","log","userName","prompt","remaining","drawCard","event","data","innerHTML","image","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport backOfCard from '../img/back-of-card.png'\nimport backOfCardUpsideDown from '../img/back-of-card-upside-down.png'\nimport { getValue } from '../helpers/helpers'\n\nconst Game = (props) => {\n  const [deck, setDeck] = useState({})\n  const [cardsPlayed, setCardsPlayed] = useState()\n\n  let compCardPlayedValue\n  let userCardPlayedValue\n\n  let cardCodes1 = \"\"\n  let cardCodes2 = \"\"\n\n  const compCardPlayed = document.getElementById(\"comp-card-played\")\n  const userCardPlayed = document.getElementById(\"user-card-played\")\n\n  const compDiscardStack = document.getElementById(\"comp-discard-stack\")\n  const userDiscardStack = document.getElementById(\"user-discard-stack\")\n\n  // Create/shuffle deck\n  useEffect( () => {\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')\n    .then(response => response.json())\n    .then(deck => {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=52`)\n      .then(response => response.json())\n      .then(drawn => {\n        let counter = 0\n        drawn.cards.forEach(card => {\n          if(counter % 2 === 0){\n            cardCodes1 += `${card.code},`\n            counter += 1\n          } else{\n            cardCodes2 += `${card.code},`\n            counter += 1\n          }\n        })\n        return drawn\n      })\n      .then(deck => {\n        fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?cards=${cardCodes1} + ${cardCodes2}`)\n        .then(response => response.json())\n        .then(pile => {\n          console.log(pile)\n        })\n      })\n    })\n    // fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/pile/gamePile/add/?count=26`)\n    // .then(response => response.json())\n    // .then(pile => {\n    //   console.log(pile)\n    //   debugger\n    // })\n    // setDeck(data)\n    userName = prompt(\"What's your name?\")\n  }, [])\n\n  // Draw 52 cards\n  if (deck.remaining > 0) {\n      // if(data.cards){\n        // compCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n        // compCardPlayedValue = getValue(data.cards[0].value)\n      // }\n      // deck.remaining -= 1\n  }\n\n  const drawCard = event => {\n    if (deck.remaining > 0) {\n      fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=2`)\n      .then(response => response.json())\n      .then(data => {\n\n        // User plays card\n        if(data.cards){\n          userCardPlayed.innerHTML = `<img src=${data.cards[0].image}></img>`\n          userCardPlayedValue = getValue(data.cards[0].value)\n        }\n        deck.remaining -= 1\n\n        // Decide who wins hand\n        if(userCardPlayedValue > compCardPlayedValue){\n          // User wins\n          // Add comp/user cards to users pile\n          userDiscardStack.innerHTML = `<img src=${data.cards[0].image}></img>`\n          // \n        } else if(userCardPlayedValue < compCardPlayedValue){\n            // Computer wins\n            console.log(\"You lose!\")\n        } else{\n            // War!\n            console.log(\"War!\")\n        }\n\n        // Comp plays new card\n        // setTimeout(function(){\n        //   compCardPlayed.innerHTML = `<img src=${card.cards[0].image}></img>`\n        //   compCardPlayedValue = getValue(card.cards[0].value)\n        // }\n        // , 2000)\n      })\n    }else{\n      userCardPlayed.innerHTML = \"Out of cards\"\n    }\n  }\n\n  return(\n    <div>\n      <div className=\"grid-x grid-margin-y\">\n        <div className=\"cell medium-12\"></div>\n        <div className=\"cell medium-4\"></div>\n        <div className=\"cell medium-2 card-stack rotate-right\" id=\"comp-card-stack\">\n          <img src={backOfCardUpsideDown}></img>\n        </div>\n        <div className=\"cell medium-2 card-stack rotate-left\" id=\"comp-discard-stack\"></div>\n        <div className=\"cell medium-4\"></div>\n      </div>\n\n      <div className=\"grid-x grid-margin-y grid-padding-y cards-played\">\n        <div className=\"cell medium-4\"><h1>Computer<br></br>vs<br></br>{userName}</h1></div>\n        <div className=\"cell medium-2 table-bg\">\n          <div className=\"card-played\" id=\"comp-card-played\"></div>\n        </div>\n        <div className=\"cell medium-2 table-bg\">\n          <div className=\"card-played\" id=\"user-card-played\"></div>\n        </div>\n        <div className=\"cell medium-4\"><p><b>Score:</b> &nbsp;&nbsp;&nbsp;&nbsp; Computer: 0 &nbsp;&nbsp;&nbsp;&nbsp; Player 1: 0</p></div>\n        <div className=\"cell medium-12\"></div>\n      </div>\n\n      <div className=\"grid-x grid-margin-y\">\n        <div className=\"cell medium-4\"></div>\n        <div className=\"cell medium-2 card-stack rotate-left\" id=\"user-discard-stack\"></div>\n        <div className=\"cell medium-2 card-stack rotate-right\" id=\"user-card-stack\" onClick={drawCard}>\n          <img src={backOfCard}></img>\n        </div>\n        <div className=\"cell medium-4\"></div>\n      </div>\n      <div className=\"cell medium-12\"></div>\n    </div>\n  )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}